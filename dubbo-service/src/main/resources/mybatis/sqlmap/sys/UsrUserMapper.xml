<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.cl.dubbo.biz.dao.UsrUserMapper" >

  <select id="selectByPrimaryKey" resultType="UsrUser" parameterType="java.lang.Integer" >
    select 
    *
    from usr_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from usr_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="UsrUser" >
    insert into usr_user (id, username, nickname, 
      password, state, gender, 
      phone, email, encryptSalt, 
      lastLoginTime, createdBy, updateBy, 
      createTime, updateTime)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{state,jdbcType=CHAR}, #{gender,jdbcType=CHAR}, 
      #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{encryptsalt,jdbcType=VARCHAR}, 
      #{lastlogintime,jdbcType=TIMESTAMP}, #{createdby,jdbcType=INTEGER}, #{updateby,jdbcType=INTEGER}, 
      #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="UsrUser" >
    insert into usr_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="encryptsalt != null" >
        encryptSalt,
      </if>
      <if test="lastlogintime != null" >
        lastLoginTime,
      </if>
      <if test="createdby != null" >
        createdBy,
      </if>
      <if test="updateby != null" >
        updateBy,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="updatetime != null" >
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=CHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=CHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="encryptsalt != null" >
        #{encryptsalt,jdbcType=VARCHAR},
      </if>
      <if test="lastlogintime != null" >
        #{lastlogintime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdby != null" >
        #{createdby,jdbcType=INTEGER},
      </if>
      <if test="updateby != null" >
        #{updateby,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="UsrUser" >
    update usr_user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=CHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="encryptsalt != null" >
        encryptSalt = #{encryptsalt,jdbcType=VARCHAR},
      </if>
      <if test="lastlogintime != null" >
        lastLoginTime = #{lastlogintime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdby != null" >
        createdBy = #{createdby,jdbcType=INTEGER},
      </if>
      <if test="updateby != null" >
        updateBy = #{updateby,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="UsrUser" >
    update usr_user
    set username = #{username,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      state = #{state,jdbcType=CHAR},
      gender = #{gender,jdbcType=CHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      encryptSalt = #{encryptsalt,jdbcType=VARCHAR},
      lastLoginTime = #{lastlogintime,jdbcType=TIMESTAMP},
      createdBy = #{createdby,jdbcType=INTEGER},
      updateBy = #{updateby,jdbcType=INTEGER},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      updateTime = #{updatetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <select id="getLoginUserByUserName" parameterType="string" resultType="UsrUser">
    SELECT *
    FROM usr_user where username = #{username};
  </select>

  <select id="getAllUserList" resultType="UsrUser">
    SELECT *
    FROM usr_user
  </select>
</mapper>